const { expect } = require("chai");
const { ethers } = require("hardhat");
const { rlp } = require("ethereumjs-util");


describe("StateProver", function () {
	it("setupContracts", async function () {
		var contracts = await setupContracts();
	});

	it("proofStorageRoot", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0x74433d8ccc5fef51a0e5861484fed9684ccbd1e3bc0c544bc7365ea95cd653c1";
		var proofAddress = "0x85c5f05ae4cb68190c695a22b292c3ba90696128";
		var storageHash = "0xddedd31b9fb085bdf1d7ec9d85a393890f7d9afa03b581267386020f9be2f7b2";
		var accountProofArray = [
			"0xf90211a0063f8a6816ae01d23f14be8a17de346d31f4855eacb4a45521296f09b542b308a0778fee35ee79d05a9b4451208cae6bfbcf03287a3350c985f8adb7d471a22f68a0d95327f260d936494f00f592adb18b9d5493c6e01a265d34ac63b3821dcfe282a09fa3ef0d0801520f2aae91fb92942db312ddc8024ff965e494652d14b14cbfe9a0490aaf01e5ffe4a21169008b4dddc345d063267cce1b2f22da326011985ff4b1a0ab6d25ca52c1e3d6c5cb482a81208c6e02bc7d924be24c69e22ad7a7131e671ba0200c1a5c61d3e7303ad893c187d5d6dfff4657f1bbc75e2194edae77dbac12c3a08dfcc87d296f1026402794b8c60d02f8b41c99524c963d9f11360a7e90051ae0a04aa5189e82b139efb697def42fff870f733f22b57852db99a337912323091820a0ca659961c67b973d3791c790a50cbf2581536ebd11857755893a0dcc453446aea0e43af1ca44adbe7d83e670b9e0aa2f3f2cfc91b1bbd38c968b38f91832aa0f08a0c0e508a8491258c65bd88797d52229d3dc0d03c165274bfbdf82c140f2c32687a010542fa2e9b9834195c40cb9f07a2b363b814d146f8454e3a0a346de36d0cde8a0f0c75426c75b0200e44d54d6a4b783ebc276967f96b27e50a57bd74e015e3b07a02b251744e88d3ecbfa90f28d3b4a5c68f639066270386dfdac0ba08f808b134ba09fa814f13c9cdd69ba58202359a08b24ecafeaf4edcc69e7fa0d82ed41a3692480",
			"0xf90211a06f97a33107bb4a62032f19b7dc2c0ab36787d16acc25fa983cafe0961363bcb5a015c31d94fa31349972daac5c38681beefaf83a99aec56dddc55dbace5564966ba0606c8541fe69a7bfab945671713a925497e214af46436326ae795620c95b4452a006b436d546b1c482787656ba86c247de2038a961e3edb670675e897bcd56aeb6a01a1d3169c1cc141103558af4243bedd5f41478dcab22d172afc3ca3c6f539f10a026b71d118e0902815a4d5345a2fd0d2bb79d349deb59ef7ded92bce80c6ce428a04349e18eb6372e48cbe87bfef827457e4159935fdbfcdc479636e11b6a5d21c4a04a4c5f29420dc24ab3efe2d246f1bc5087fe172eec4c0dd4d950438dbeafd25ca0313269d386000b827137929bbb0181bedb0e70cdedaee1c7e909ed6e4e9d051da03ab7215cdf11ad4805f4789c75113159f950aeec5a3d79ae0d27543e94ba0f56a0579eeac9edffc586db0b4741787875a7a34b66def0b1037444151d7a64699928a0449cf916f6c7f3f7c652458db4d5c9f3a117bddb32baacf3a77eece641ea078ca0b968a9766c35b0f497683206eb26d232ed4590e91aebd110f23161f1aa4b2119a0bca560604adf865750bf18d65aaadb467b489ff30f7c07e25bf767ef0d10ed18a008e9b2b2f283e8408dcf7e2bf6715298898085a18ab4e05126d426c088b4d023a02ba440a7d55a231e49b4aef3f76947ebb1a5d8ebabcdcd7d284cd92e96d69a7a80",
			"0xf90211a0da553e35d03aba17a0683b37e282d060ad027770a31fa7ed37e5e887abd12df6a0b06cc8e42ccb0a548e27e47097b0335d42c6d2afab7dab2708af569974fc0bfca0d9fa88fe7fd1ce8b215462397c1f972dcf0580728abf1dab87c31599020b84c8a06156aa908a3c42a7680400e1c6290894801a6823da5e433e7e285307f60cc5e1a0b993b54e3b902bdbee65eba4d70d0c6535d52d165530100b55bf66afa9139d8ea051b7cd178ea4adfec0a30f1decf8104a5f4ed173a62cc9b1ac60e9d6c429e499a0b60ffcb53922da988121c7ecaaf5995371f34c5f51d32a6460d25282c021edd6a0fd08b8446e23b416d85e297cd980dbfcce447c48925cffbfb8ae08fcd4049553a002b1d92024e304bb3a878e742cc043682f62df13689a451e66144fb4f00f363ea0422ab6ba2234a7a79020ebbd3d28ef22979a665f071f1c099110effbac6b624ba048d48912c773a99ed6a532090b9dfc25b548dadc0d88f9ec22f05814f40e5924a0f2d9b177d9b0f42b9b49438a7abcba987db7b00a6a1ed5494bfd2cf95a52ce63a0a2c6f6183f361c756bbae3aac9343edcb20aece1aabc44583595fb4fd8f1796aa06b8fb48388706280b138ed14acdae6fb9f4538ee238da235aaf6ab5749ef58a9a02b0700222cebbe61c891f1f8b2164ebb278677d66283ee25fb50fac5d5523d5fa0b67ceae835fefd178c903c2c591fbfdd36d20646c7d2a5d84d165e3cbf4d7daf80",
			"0xf90211a0c9aae40babe8471d670d0a822a190c09c9350b908551a284781428ed0b71a0bca087bf08d8ad78ef68d91ba45e4c47a35a67e7fe0621136be52e2795952d755846a052f6c5ea886a91c15d76ce27e050c13c72dea1940f400a022135cc5cb36859e5a05f48be17d9c2e492dbe22900391926f48159d7bf9ab34399319375b8183e2469a01bc28f3d8b73be5b09ae4f63970ce9152c67471dd6e58c554edb27c83028e59ea0dcd74142ebdb097453cbc6ba3582dc432047ab13aca52de5b1c247936d6fbabda073105bc08b2902de52466ad08bba60550fccfc41a8f75fa1a6ef6dcbd89f1fbba018479082da79a1cb09fb21f080eb8478d7a67d34b30e9c1d86af4e8a4585dcbba0f3b72286347674398ed9caca19868c3d55c430df4a01a7ee645abd4d6754da59a0460b8525a52e36ea1f04fa012b4016661648d50213b8f199a82b89080badf510a0056f44ff899f32d6121c55e80c3c4f1145b5bb179c86136145dd253ff9d216aca07b1410570b6665fd4d49e32c62bda40f57b96dc1f298adbd795b840159b15f18a0b7107c06301735eb1c3ffe9ebfa884b651e2e8bb78e36f8472829c5d41223043a044b8138eb9c6c69498264c3523d4274f2607dcccd0db8c525cb44bcae549579fa02d21c87ab0d9f71a289e524736a81c107305c03f565f54d2ed6cb11bb65d6012a04581814a9c51d618822b6ab11d168850ab84c06ec26f92fcc736cf551e0d116780",
			"0xf90211a0629b867903b4d24aed612fb32d9236339873a7977bfd349221e302eaac6542eda0a495863ecff66c300343defb19003ca28a9a8ee7a2fe0c6577910d16283b9caba0db4728bbf8ccf6f76fc07725a2a56238d3b5839b5110a795628eb98490e46f10a028759ced9179311ab6804b194152a6f711ad91baa752f8d7a5604ab830430dfda072e8d388711fac65292ed4b2303c73c7a1b133e897ec4c1baa5d5c0d3b051bfda08d89ba8286abbcf303cb66c5930d257bfd93f3d87b8f9ad3ba812fdb16a8aa94a09f250305bd6163c57d0009d50641f7d8209e91ec6639191c53cdebf7773cd3a6a0bd5262135f4c68ddf1642ab36082bd6d9aa8bf21379a653eed8e7869be7023bea0764d2a5b78cf2925191441cce813eb5aad293efb6ca18579051b6d1809d73593a0a843da34246057e2115a89c724a53d2faab808622086f7ab446cd3603a36b5b9a05c25bfeb91cc5d5a77fb0fb5ad14d6e26304bc0074dd5b757ff59d0b344c8c7aa0aa105640241362530496dd3b0357ad153e22c8a58f6ee3b3284813deac0c3f81a036691d0235be05a85fbd4bdfe3b8bbae2c2f04b2e363497507e0b049c75d763ea04341000eb9e0e40f47970f29fc3231fcf57e52898289a90ae94d41521c74377ea05ed52680cefbbbd3edf4f5bfde430d59b10ea3a7153c12c265aa887289a23e86a07c657573ed0c04927fcbc42fe0e1be7026d6d1c10c95f23d3d2dae85d036279080",
			"0xf90211a065131819a3e39145dba4fa16ac87519eb3a42eeb041d8bebdbe5a90f3d452e80a0773aae9ce303d4c4bbe254b31af5ec6d192572c4a8f26acf9d8fb9efaa009c41a041ae7381c1756ed985efaceab11eca33ffafd5d72e93f40d63fa75bade415a59a03ef6ec059d25add4c39faf2f077aafeea91d570e6e3bbf9886176431f37f5d3da02588af7bc65d49f54dfd926af32ae31c989edfb3a7a0dc0b7e7128caf5059c7aa0548100a716ad9d14b28f03624cf723ad1ed2cca3c1476ef3ebb87e456a799feba0a9e4ddc5a90accdb75651d2811623009cb3a80192c47af40fdd0fe468dc88a7da0a332ab0186bbc98f956f4244294294d5bacebe530d9db1fa0952f1232085c362a05cc40b2c536522bffe82f6a93a8c1eabd608b4a6b12a293d647e3aac47748ec1a09ee425aff866e7dfd884dd4f45e678d97064fe876353a81b9fca555668eb9b99a02877e617b639e00821d19175aa4cca9b0402cccdf6a7a1124d5e020150a9e77aa06ea9e19dbef3f8a1606248ab2228c4f841d4e63b6513a28edd71d28ea038efd4a07c4312858fa557eb322ea31df889104aaee9107d0455d2519d79dfcf31420677a02ceba86bb4752f353716be28e99ebce6892d1bddc938ed1651ebf10384360050a0882832dd1ee079f8284c59c64abc0600709350babef75844a0c77f4d662162a9a0f29d9936a6aa8c93093c7ccba46001829912979965a1d6bbb24ef595790c506d80",
			"0xf8f18080a0297dcc9399042b589677674c1f97a41e6f8a6423d602a5859fa9b6c3c3171c86808080a0ae3152af019c003fb39690b10c554d531b4420ab24ee14f74c1a3a09d03f0e2480a0d0d30507c7d9402fda853d63ba3eae9977b3e414525c5cc400e4477a71bf861aa09ab2683ff9aaf6480505e9e0b12fd5558ead186e49bdb0bd0c7b45ed264f25288080a03359d9ebd768f90ab01a4542424ea3215fcb1db7fb8c4f0d4b410647f371501280a0abc480a6cd07dbd11cb08eff42fe667b54db45d54ef30d9adba065b4f8b4ac63a07523eb39343bcf3922db11596a61cd8a42b4b44fc3972b26990fe39d421da96b80",
			"0xf85180808080808080808080808080a0a706cd8b6c24919150405dafe0b258106cae6382878108fac63d536b220d350ea020a7cb6b464e5dc824ad2b31a4eba33d702c48b88c6c5bb91764c7536a07427a8080",
			"0xf8669d209fe5f91669d7be4dc0788a7a6e9a6ebb74a71b10c51eb752612d24c4b846f8440180a0ddedd31b9fb085bdf1d7ec9d85a393890f7d9afa03b581267386020f9be2f7b2a09a166ea7efe7b7421ba941a74582753882727c67009fd1e26c9521a43ab4f6fd"
      ];
		var accountInfo = await contracts.stateProver.proofStorageRoot(stateRootHash, proofAddress, accountProofArray);
		expect(accountInfo.storageRoot).to.equals(storageHash);
	});

	it("proofStorageSlotValue", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0x74433d8ccc5fef51a0e5861484fed9684ccbd1e3bc0c544bc7365ea95cd653c1";
		var proofAddress = "0x85c5f05ae4cb68190c695a22b292c3ba90696128";
		var storageHash = "0xddedd31b9fb085bdf1d7ec9d85a393890f7d9afa03b581267386020f9be2f7b2";
		var storageKey = "0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af";
		var value = "0x6372efe7000000003b9aca005180db0237291a6449dda9ed33ad90a38787621c";
		var slotProofArray = [
			"0xf90211a096e646b6f52e5b2c8bd41dc8515c2be4b4af57372c6577fc0405503814fbd1e9a0b06562dc8e323a118e1dbf55fd2a4c80790e25ab38aee857e39a5231721dbefca0d694f42e8a997284fabe91d5ed51f9c8e2b04b5c700f7be74c1d25947c168ac3a0aa2f82c61e73a8bda11437d802b0e0444bb780a309707ed7ab01898dd2f559c5a07429d025d44c00879122dc2f1b795398df59d4e9a418c10d26ab62a89ec5032aa013c99041a859cba7bb6f7657b538dc25e3ec4a5b672dd9e5e608dff71f8b2ce7a0fa4a510450bcfd4a4e95a406ccf367f2743286483f39fd4fa8262c261025d96da0ae2761011f1d32fc69cd17f481a7f8c8004b8728623060eae441a2e017e50080a0cb52aef1a30c6da20abba6456d7618e502c15b57ca0e157585278c62ac0a0387a0100051d0e4dabd2a99866af3f5945aa8fbb82fcc0d1096acce805e5cd7b11f6aa05d53871a3e2d1865f90882d6fd62ca27e52823daf4aa4176ea069321c94d4059a02ebd718c4dd1fd6bd02abe130b17b559a2c4e30869f2483a1d2d07e0395ee3a8a0a2d5a57bebe1269668860c87c1336285f3036e31f7536bd30add90b68254ef6ba061865cab2e64dd97ed5c1cb43a7ab0f8d727e73c19cc89b8d63e0cfea6ecd3aaa07f77f30f9c94f5ed4b12eb092d8c5780883d2821c84eccf8e8ea829c883fe01da0040986bf9f6befdf513d9dd047957f04366fa1bd42f280111b79126812ff899d80",
			"0xf90111a02db9d465a1e9a24e985a1932817dd8ea2e3a964edcd111a7f127c7847fe9c2a0808080a09a9ec0fcf0bae7cee4522a375ab1c1ad919bd1c9d2c505fdcf0477be79c07b9da03326b59010213a80d161e1cd0759fe812b84370d0161c74f398c0c258b4a063aa0ffeb7927787ed063c5a765511c3089c25baad8ba2a40cf6c6afecff43d73f516808080a0ba7ca69e8ea2d28bd11ef8eddd9b60dbd834d8b967258dd4ba37592971ea07618080a0ff05650c5fd25fe3be7a20d4f813864f17c6a9c7e10748f5367bf9546fea6519a050d54829b7734c77c85c1c1d7fb42872bb561cada3dcc7d4fdc819234c38d04da0c1bf290ceeacf7d0d2981cf284ea1ac75e0e6895ea2b612d52d2617aeeb643d080",
			"0xf85180808080808080808080808080a0e844b59ff5a9e45748fa3df9b3a3eeb713b84296a02f9ba9684abb0f2999050b80a099f2df66a4924bd666f26e484e08155ff5fbba23fd96eafcff9f315d60a0af6980",
			"0xf85180808080808080a03820e741e78e7d5d24e5c261e018219455d36d5980a2f4a4c7d0a5b811c311c480a05ebc1d1b04c9a9fd05460c746c431e5dc6899b14822335743b9334b5fbbbcdcc80808080808080",
			"0xf8429f2023aaf2a9471d0444688035cd22ee9e9408f4d3390ce0a2a80b76aeab390aa1a06372efe7000000003b9aca005180db0237291a6449dda9ed33ad90a38787621c"
 		];
		var slotValue = await contracts.stateProver.proofStorageSlotValue(storageHash, storageKey, slotProofArray);
		expect(slotValue.value).to.equals(value);
	});

	it("proofStorageRoot 2", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0xb2106bb97488c9c3cdf983bce5254fb71ac3d5d8f277e49509e54c7c68e81699";
		var proofAddress = "0x85c5f05ae4cb68190c695a22b292c3ba90696128";
		var storageHash = "0x25182d7f7a22bc53c57418f96d7aeb97043420a38dfb495bac70c0bc61e27c73";
		var accountProofArray = [ "0xf90211a01a723d5eed878070b60b01601a9e049ad49e3bb5828da41e43a7f0010e255e61a0d252b888f72e1eda5f162bd06d2c53eeaea776f0568b4a72670cebd12806171aa0817a410e142a5eb939bfd8828c57f62daaa2ca4a9536c44b84ae2897a87eeaf9a084aa10803584ecd756aef5d0dfae4988ca44f35913a1d8b2a7760550a3a398e0a05ef172dc39a15b6e2a050660af37437fbb00bcccc3f7a65d02a58e169d9399eda0f0e12f9586e7e86fa17b55d5e1bce783f5b8edef530dcebf68a210bcdb6612b1a0a1545cfbd048c81b1eca2059099b499776f872bab3a669c43a50ed01008c540ca08473e04d6da725a51c21187234b0399e38b4035d1be4c1dd23ac257925c20518a0cc420730113f20f8c4eeaf0f4f8c2ca77a7ab982253c3e776c465cc70c7262c7a0619efb16bde458239f020bf061c49d547acd9909bb4459bb0e060ab50049e08ba063dd61b4d8d421177c6b188f08d1dfd5b85dac5eadecc23a9e766a358a7a4703a05ae021e15ec6ccc882796e9672e3d8ab33d39da694ffbceb4a6844d695056b3da0ada792974fc206aa398fee4d20d166a860c98527c02103183617dc8bf1151c16a00b1bfbd573af88d94858cce35fb347c4cc904d40305155c2eeabbd5d31a3b550a01452ab125da5bf0bfbc8517ac295c3dd7017203173089a0ee8a3a99c13761845a0abefb011714826751a88423ac2dcd1859e81e44a68ec51de6c9080bab40f6f1980", "0xf90211a09f3731718b095ac1e5a58fc4c86cf3d6df3ce5f845b7690da7500a800bf4d912a0cdcc6968c59d293ca42eef22ec4be1d5366dc5277508e9e65638a5f6d5b70052a0f34946e87913878ff1106bb2a372ea1a7c1ac2c7dfee8df1ec3b58cc2ef90d50a0a2d8baa9a18cb25b3c75bda6ea5de04b04fded6e1f7c1e8a258da0fd7b08fe95a01ff1b77e403b932f33ada57982dcc15eded603fa88d230fb9b664b524a9fec97a08fc04ecd37d3bc802dcfe5402113a3f8fce9aba7600c3ff45c5b6d7a0abaa888a0a8232263d1424153622bef01c310b5d083958e0684918d4133ddec7daf096c2ca0de2f467ad091d97b89159f88bb896a39843f9ce13adc34ea4befe73dbb1d3dcda0bd13dea02ada52e239ecf4653398567d0761128fe5be0837cefe413c897581fba0a439b63a65c286c8c9caeff6d10ea7541dc703115e218f95dd8a8d04c8f1d1bca0e00612ec677aa0e5381f1293af0c02cd27e6284c072807a3d221e78612cca825a01a2ea32b35b792c26e7fcfce0897b74aa2d9912caf33e38c6b9505ca3a8aedbba0786ee7120646452498d7b982cc963ff665c7adf4e45cd3a085af577bd18d1156a0d202b8adc39f5c6f9fefce00abb5ee3ec4e5391ba96c8fb05ae1734f1e860e19a083470ef744160bb6dfc135cb0859c0e26cf3c5d00b8f8d9696ae1decc658533ba08f97ea9d0f29e83f62983b29a512957638dc0bc2181b3eb925ad2b22bf42fd0180", "0xf90211a0cb3a88cb8befd461692c7a068db1643bcef2dc9be12f213faf8fad7cde0f38e8a05158ea34ff783d7d7e9fe6a0d0b305d9cf43adcff3434bdf562c019ba7c9a8bfa0e7d7db595d6c9ad52058bdef748885927a74628ef67eef702fa84eaed55dc6e2a03682b17c55bdcc18e6178a437da05a497a3d1090e702250aef6574279fdd0ceca00e776cca9597266bff62754d8a8573f482ca8b8c1f3164b3a4a1ad50d4c7e37ca044caaff44b706f483bde2eebb914725fdda453376a195d28246a65e1908672c9a0dc1d85b1b2e6d11acb2d30d95c94809feea969c41d0eeca234d68fe1c0e75036a0b07e599ee4911f920ea7b7d32d38dd604f3709fe3d7ba8b16af48f7fa540184ea075c97851fafecada309f1d58cccf2aba43921291eaff3a4fcf0376af9c798adea0f8c1ab47a6d41a39b447bb874157f069065625f350464cef6721f9a90e2b508ca05f481e5de9e07e74d239684fe9412e7121d3bc2506b1bf1bfbf1949d0c46725ca070793c94f198367dd3938d368988e635eb833c50e9b946809606af72f066b545a0b7d30bf578d5930c85c29c4a9b06bed6bd2a9e6da7b16b4a93d089367fc9467ba02bc5da04f2871d2c2d6da086a0e7a71d93ed33e39614ca8d21199be5543a4095a01493ac4af57316083a0df85e1f56fda4fe19d1e047d93e068d892bc2eafc787aa042196633a7c74333a8d89e7bc04859c937cd37b129ccb7ec29064556c439e73c80", "0xf90211a0410c7d5d72e5debc114f2db3e6218105bd83ebae749c85d2a1a6793924713553a0b63154e30f0f73e8bc2711670ce277fb44cd64e8b698d850b0b0257a293084dea0bbd2adfbc55e066ca42962938bb01605f5789870838720b64c242b084c105648a0a15fcd8eb5b3265db5f9f855a08ea3e54bbd6a9ffb6fd606c48af61482b3d430a01368cad8ff2076f20398c6f29ccbac4bc67021eff7231e309b81421a0c3fa668a0a15a5269d4658de9dfe4057ace10e11d3f734b6d1051b0cd7af8818c7b3187c6a0eed90de03c636c5ccc20e4eb3abbda4ac93d21e138d5a712669e0cdf8513dbeba069ea9afda593114899a03953e20fe4b44306be365749e3f68991137eaaa46e0aa0817c1ef68da819c8986a9e04c6bedccb2f76c45bf13f0af701b0b72337854d47a093d8d6dfd52f3b091ab269916ff29ef474b191ae26814393ebf0d0b6dd5134a0a068a9eb54750b87b7326375353b2eb7f137aaae51e285a4f5dc2025a780964c21a0218ccba6bd92e458f9e44a41e37007329e4db5c5ff0cbe0e8b4342656c473831a024b5caa8ba9d94b7b42fbbd939de0a5c10c25ce66b8d1a5cfde78940001b93fca0e46d58277634e4a5fb7d58bfef1790b7692862da4da8fca4ae01ed0343703aeea08275d7fb9195e8fce9d0ca736efc85b25ab03c566ad9626e39ba6384040de7aba0bd5b05d7399a1e4ec62914386ac6cbeac8ea8120aae5a9b2ae0446f1ed8851c580", "0xf90211a04fe0a67d9ad490e4cc75a24f69b3b2e4d43a8793004abee3a5e2538a76fe5fb6a00f4271f399cf7733abd5063ef3966252ecae74db766b74d5a6b6e5b98553c69ea055db680a371980533c72f85c68894cd99b0ec43be597bba9754ee8794a2a9167a0bfcc7cbf12dd3bbd8710bac2517216683f8fdecb818c52c517a51082e4c019ffa0759e4ea06da2d572cb9625eef982ffb9feb8349760dec68ac7752a420e40a7f0a087f8576953aae939b3ba206cd8c57e7125cbc95a9fc99fa99bbb8e32879e14b7a075957b8b65435e9834b8ce99d1ba0ddef93dafd14f298c2a245e3e47e087a4e6a0ab015acd8b103f6dd8f29f6f22f9a9a461cf0938743e3aebffdb0009b9692cd7a03fe24d3b83fe715a22cba19f0abad7113c1757a177abfce239388caad79be2cba0dac2cc8c83f26b07a690dd70d6aff2e11b9e205ff28ac5cd6d28be8e7fc04443a0243b47ec8ad079878303aeb7c97e2f74e7549eecf149c1b7fdd2059b46b114bba06535f8ab578bcf6df58429e23aca146da24ab42790e795b9c44728c4f21bdb31a07b422c62217ac8c24274b0f7742445b6965cbf22bd17b1752bf84e3a55c8a3a5a0ded49559d87cd7b2d2f7b63fcdecbe6a40e53b4a72433e94ed30f3887352b5f2a05da68f26ecb75a1b6f4cc0a6b90cae46ed2a431465d5c9cf61a539bae234c915a0f09713c84743d5329a4b2b1faa7a938a5c4e6dc761405d0b8ee2532d0a2cdd2c80", "0xf90211a028181f4abd0b94bb57ea4c0be29e9b0807813a9f3fc68f9674106c5727ee1f56a04ec527211f2d469d72a71ad3fafd7fe1d87b902d6032da15d939c9c84a4883a0a041ae7381c1756ed985efaceab11eca33ffafd5d72e93f40d63fa75bade415a59a03ef6ec059d25add4c39faf2f077aafeea91d570e6e3bbf9886176431f37f5d3da02588af7bc65d49f54dfd926af32ae31c989edfb3a7a0dc0b7e7128caf5059c7aa0548100a716ad9d14b28f03624cf723ad1ed2cca3c1476ef3ebb87e456a799feba0ae8a008245cbb4f5c8f3f9228802008374bc79fb699e871552980ad8e4278ce4a0a332ab0186bbc98f956f4244294294d5bacebe530d9db1fa0952f1232085c362a05cc40b2c536522bffe82f6a93a8c1eabd608b4a6b12a293d647e3aac47748ec1a0823d98ca54c107ea7b3f5e06a40b9f98d374e515217ff34ff1e66d1312e1350da02877e617b639e00821d19175aa4cca9b0402cccdf6a7a1124d5e020150a9e77aa06ea9e19dbef3f8a1606248ab2228c4f841d4e63b6513a28edd71d28ea038efd4a000050c00eb495b2c854d2fdada6c04f1364911be7a7957b54d37d8ad3bf9eba7a06171b02c500f449771bcd08ee54aeec1f07811a4874f7efde2ada3e3bb0dc4f5a0882832dd1ee079f8284c59c64abc0600709350babef75844a0c77f4d662162a9a0f29d9936a6aa8c93093c7ccba46001829912979965a1d6bbb24ef595790c506d80", "0xf8f18080a0297dcc9399042b589677674c1f97a41e6f8a6423d602a5859fa9b6c3c3171c86808080a0ae3152af019c003fb39690b10c554d531b4420ab24ee14f74c1a3a09d03f0e2480a02ae62257593460496ed713af14228969391b246bda782e922f0da537f40ad2ada09ab2683ff9aaf6480505e9e0b12fd5558ead186e49bdb0bd0c7b45ed264f25288080a03359d9ebd768f90ab01a4542424ea3215fcb1db7fb8c4f0d4b410647f371501280a0abc480a6cd07dbd11cb08eff42fe667b54db45d54ef30d9adba065b4f8b4ac63a07523eb39343bcf3922db11596a61cd8a42b4b44fc3972b26990fe39d421da96b80", "0xf85180808080808080808080808080a0a706cd8b6c24919150405dafe0b258106cae6382878108fac63d536b220d350ea0eb4c2a8a5aed6d30971c2c73651095f82177de1fed6711ac3b83f3431934e54a8080", "0xf8669d209fe5f91669d7be4dc0788a7a6e9a6ebb74a71b10c51eb752612d24c4b846f8440180a025182d7f7a22bc53c57418f96d7aeb97043420a38dfb495bac70c0bc61e27c73a09a166ea7efe7b7421ba941a74582753882727c67009fd1e26c9521a43ab4f6fd" ];
		var accountInfo = await contracts.stateProver.proofStorageRoot(stateRootHash, proofAddress, accountProofArray);
		expect(accountInfo.storageRoot).to.equals(storageHash);
	});
	it("proofStorageRoot 3", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0xd59674eab1addd5f37d716ee0eaa8bb7c40a0cfb2d982556eb85b71ebb3f5b1d";
		var proofAddress = "0xc91b651f770ed996a223a16da9ccd6f7df56c987";
		var storageHash = "0x2dd32c16cf2eec73b85319ff65527c16176333dd1c7c042d678ab48019ff6965";
		var accountProofArray =  [
			"0xfeffff80d8e0328926b84bf4ec9d0a2816e0b38f5cda3348a280e821fa765529f27973c780a960d038dedc80bbbbe042af4e8970bf98c8bfffb9b5921eb020507afa0e01b2807242c96ca4413626aa7266926037dae7754109c7e422c9899eb9c42b4189a8828005294d398c4ef9a86d752ba5568e1d01de30a76e2c705dc56b6708af69fccdb880cfb872a9e47fe946d8a5eb47d9a9140655217ce0020b819c1b98dad218131ced80d485da2638be45506378830886bea5f626f3cc12a9c77a0fde7c118c8e78b92c8008c8f48f2f6b69aba1e65dd9438c54bf307df846651d9a1bb9497e2756b217318081d80f45fc1c6e6400976d7349ebe03b8cfa4ab6953c7ceef72c9778e17a54df800358a2314ad6728f57c13b593c7d0291629984739b36b2b9d5c4e461025c3f268054523197a9fd381368b9d6c6ebeda2bc5c72c6ee2254f724397d7027eacaa4d580875f5fe38fd6d4a0c379d34a03b787f42310422122391821edfff3a734a3190f80b03781c9d808d136b86166a223f4ddddd0359bec2f7f9e971a532465a3074d9380a3d521c266bf8bd9ceb8c08a2835cc2f48006b65390fa010566c9d4b8b75771d8065bd0796b3e050743f27e7f009e8f525305566066cd2c0a62089ce5c40e9b5af80f5f0f6858e4e0f18c6e7c6934fed592d5a4a020ad443049c8e2b4002108126aa80bd6d89f9b999939648e3d5c6da8970c4772c6bf1d9389e351580a381878556fa",
			"0xfefebf803ad5158a6c6fa16fd45daa51b4047ecedb4dd6c2255027aea623ab048cd3b00b809dd1c62107c413e54c1502e1bf6f966b9dbb71518e48cd7d4fc86330ad351f6880e61bcc4d033b87a7483b0271abb30bc143801e0a4812b68fc35a88432a3200148007816f99ba92aa3692d75cc9faa69ce7ddc78800526103f076f10f25ef830f0b809a27fa1ec6b5f5245162860762c543f7380000d2f9ac01a88ed07cbc6c4b51708007317849dd41fba8c16d73eb304225aa092ba895374787d0f44169f66c65a1a88065343752d0fbe3466e2dd202837b2e15e34ce41da3ec6aa2fa1aeb00354ee54c80b276d017a91f3ba9ddc07b86456724783159b517ed98795b79d61ae2d5c8bd5a803429809a88fc650fbdfffe7396821325f053d288a0af2d1b423b1726d9db2ad680c20b73831cc68854b721454ba81e6b63c83f1369821ecfaea5f549af8e1d518080e90cc596a5920d8ff40de53cc6db9097562754542e03b59b605eaafc5aab818a80fe48be3ddfb88840c98da7ddc1b88af1a9322b2a98751f41880aa8f60e94c62480da0b68c297ad660d29d6ab0280a99bfbd4aa36a584c15e491cf879c623ae6a0a8091f6bd240eb2b2ed5014462b0a73764f1477031a7228798f9f57ea3b12f57d28",
			"0x3f1ef32dcb5bbd7f64fd77ab13fcfeb8979d8ffd1acb9fd91597872966cd390c1901f8440180a02dd32c16cf2eec73b85319ff65527c16176333dd1c7c042d678ab48019ff6965a09b6963e45338401d733c3be4fbe3c7d5a87bdfe972c90e5594e4d20fdb70cf40"
	   ];
		var accountInfo = await contracts.stateProver.proofStorageRoot(stateRootHash, proofAddress, accountProofArray);
		expect(accountInfo.storageRoot).to.equals(storageHash);
	});


	/*it("proofStorageRoot n", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0xf3ac1098a73159e693da20a16e26deb723d8c80ee0816995c5195fa8f02de71c";
		var proofAddress = "0xe9cd84fe4ddfb0f016e3264791923902906753bd";
		var storageHash = "0x28a46df05dae7001342b4d474915e4a7d763b242f7cff7bdbd59fbef44f7262e";
		var accountProofArray = [
			"0xfeffff80846c91f816985cdb8f7631b3ee2a9de2b91c2172f1413f913645cb8a680919a380a960d038dedc80bbbbe042af4e8970bf98c8bfffb9b5921eb020507afa0e01b2807242c96ca4413626aa7266926037dae7754109c7e422c9899eb9c42b4189a88280be0f7a3464035ab96e60cdc18b929b7dfd3a10a40dfefbc143e986de16810d7380cfb872a9e47fe946d8a5eb47d9a9140655217ce0020b819c1b98dad218131ced806042ad42800c6970a529353dafd0760d0a4a7036c70e5b6bdfb09dfb65d22d32804f8d7f9db44e9fe03185824d7bff6c5501579380056420600b39b1d8a5a1c5b1804a0cfc062996d319cbb63ac0bb18eae94072e97f6fadf21368aef86622b1775480a4adbc6dfbb2836cf73c10931d02904ff0cb1b2b70bd9b53c3ae67efa57793898054523197a9fd381368b9d6c6ebeda2bc5c72c6ee2254f724397d7027eacaa4d580875f5fe38fd6d4a0c379d34a03b787f42310422122391821edfff3a734a3190f80b03781c9d808d136b86166a223f4ddddd0359bec2f7f9e971a532465a3074d9380a3d521c266bf8bd9ceb8c08a2835cc2f48006b65390fa010566c9d4b8b75771d80f542607e29ea3c228a4b4e438853297dcb39f1b9d79311d3c164f7aa628354318034825e14cc59a1a298fdd9f34c94e25afc14445b90cc5f8923e4a6f16a86bc16801e0247c0ce9e08d1e28734f9b2b5ce145ab0d80bf290456b29045d82ef3ecba3",
			"0xfedac380116944d5a67d185b4105c6f4431e8a996bbce87bd82696b8bc537551a61b873180fa181a919891236cfd76c6a01b06a0a5cfa3be5a32ab72eb527789912b6465b38087c99c879ccfd5a27532a2f1e61be2dd2e76a5c5b89241783e8772156a40218480c1d29d3b692e1cfcbcb2b15457e1f3d5ab7b8f3d8b1e7dfffcf278645dbabdab803401a421911ceb374814d04e4327a1ade73e5451e7c49b47fb91dadc8e01e69f806f92d61a9f46ed485396eff2aacda334b0d4c7182da719e004827b45f32639b480f4b2600beb514ab160b22d7a4aa48396e5d8539e0ebe0952a830e5414d48609f8008f05792771f990115a92c04aebe2f24c87bcb6825b3083e9a3ef63b4f9c404280b44845aaae49f9f79a9420e4221668bf4b311db8dcf59f29a802228e7033c3da",
			"0xfe4020806457eb02b999c5d5b098073f14e5504490075aabc3ba0998cf6bdd88c8d1c2f1804356608047570bc264ab86aa2dcf81a2a156857b5c5d33c3106a771d32283cd5",
			"0x3e0594389115e580c41e27acb64350ad3f331d30ff3d3a4e2f7d499cb1c2ea3e1901f8440180a028a46df05dae7001342b4d474915e4a7d763b242f7cff7bdbd59fbef44f7262ea07be1152a720967c3bfb57c7fa5a7291b4db5d0a3a2c4bd766808fbba741ef502"
		];
		var accountInfo = await contracts.stateProver.proofStorageRoot(stateRootHash, proofAddress, accountProofArray);
		expect(accountInfo.storageRoot).to.equals(storageHash);
	});

	it("proofStorageSlotValue n", async function () {
		const [owner,user1,user2,user3,user4] = await ethers.getSigners();
		var contracts = await setupContracts();
		var stateRootHash = "0xf3ac1098a73159e693da20a16e26deb723d8c80ee0816995c5195fa8f02de71c";
		var proofAddress = "0xe9cd84fe4ddfb0f016e3264791923902906753bd";
		var storageHash = "0x28a46df05dae7001342b4d474915e4a7d763b242f7cff7bdbd59fbef44f7262e";
		var storageKey = "0xc22eeaef610a001ad1d2cd9ce6fcb791121be56dcbe56d8c8fd3211a879dc0ef";
		var value = "0x64662934000000003b9aca0070997970c51812dc3a010c7d01b50e0d17dc79c8";
		var slotProofArray = [
			"0xfe811a8016c8e862af0badecdf181f0aa52074f9059826bec66bad984587f44a8ba89b56804a69612ebce2e9a49bcc72e5ed02244301f67985d12a2f4d876e4f6d949c7b3080aed0ce2f1d4b9680b7cd3a9202ae36fd4f9c621a7b2aea3750a0e60075c9af888049ea285bee7d5585f5a730f0594fdcccc8c788544e7f9ab6791c9503d759f9888058526d1f656e5e19afcf20b52cca9bc3b77c71177113761133f2731ba1a473a4",
			"0xfe048080491e99274c729474c6ff34fcee201706f3d639b35065f040715edd526688f66080ef4277bf6b66a8688407b83c684749af27f9634785219c4846dd4b58d8943eae",
			"0x3f2eeaef610a001ad1d2cd9ce6fcb791121be56dcbe56d8c8fd3211a879dc0ef84a064662934000000003b9aca0070997970c51812dc3a010c7d01b50e0d17dc79c8"
		];
		var slotValue = await contracts.stateProver.proofStorageSlotValue(storageHash, storageKey, slotProofArray);
		expect(slotValue.value).to.equals(value);
	});*/
});

async function waitTill(time) {
	var currentblock = await ethers.provider.getBlock(await ethers.provider.getBlockNumber());
	var waitPeriod = time-currentblock.timestamp;
	if (waitPeriod>0) {
		ethers.provider.send("evm_increaseTime", [waitPeriod]); // wait waitPeriod
		ethers.provider.send("evm_mine"); // mine the next block
	}
}
async function wait(waitPeriod) {
	if (waitPeriod>0) {
		ethers.provider.send("evm_increaseTime", [waitPeriod]); // wait waitPeriod
		ethers.provider.send("evm_mine"); // mine the next block
	}
}

async function setupContracts() {
	const [owner,user1,user2,user3,user4] = await ethers.getSigners();

	const StateProver = await ethers.getContractFactory("StateProver");
	var stateProver = await StateProver.deploy();

	// Pack contracts in an object
	var result = {};
	result.stateProver = stateProver;
	return result;
}
